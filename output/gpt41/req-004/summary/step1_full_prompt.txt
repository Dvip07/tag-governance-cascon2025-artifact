# üìú Strict HLJ Summary & Structure Planning Prompt (Upgraded JSON Version)

> **Parameter:** `MAX_CHUNK_SIZE = 10`

You are a **software-requirements architect** tasked with analyzing a complex stakeholder document and planning its conversion into **High-Level JSON (HLJ)** items.

---

## üõ†Ô∏è  Global Hard Rules

1. **Length cap** ‚Äì The summary must be **‚â§‚ÄØ40% of the original character count or ‚â§‚ÄØ400 tokens**, whichever is *smaller*.
2. **Fence markers** ‚Äì **Wrap each section with the exact regex-friendly fences below.** *Do not alter them.*
3. **Atomicity** ‚Äì HLJ preview items must describe *one* clear action/output (e.g., ‚ÄúDesign `POST /users/signup` endpoint‚Äù). Vague entries like ‚ÄúDo stuff‚Äù are forbidden.
4. **Line-number provenance** ‚Äì Include source line/paragraph numbers in `"line_source": "Ln X‚ÄìY"`. If the source span is unclear, use `"line_source": "(unknown)"`.
5. **Fail-loud quota** ‚Äì If you cannot meet any numeric constraint or required field, output the token `!!CONSTRAINT_BROKEN!!` at the end of the relevant section.
6. **Hallucination flag** ‚Äì Any feature or detail *not* found in the raw text must be prefixed with `[EXTRA]`.
7. **Non-functional checklist** ‚Äì Explicitly check for and preserve cues about **performance, security, scalability, usability, compliance/regulation, availability, maintainability** as appropriate.

---

## üîπ Step‚ÄØ1 ‚Äì Summary Generation

Generate a **structured, developer-friendly summary** that respects Rules‚ÄØ1‚Äì7.
*Preserve all functional & non-functional aspects, dates, deadlines, dependencies, regulations, stakeholder priorities, and critical terminology.*

---

## üîπ Step‚ÄØ2 ‚Äì HLJ Structure Planning (JSON Format)

* **Do *not* generate full HLJs yet.**
* Estimate the **total number of atomic HLJ items**.
* If the count exceeds `MAX_CHUNK_SIZE`, split the preview list into sequential **chunks of MAX\_CHUNK\_SIZE items** and assign each chunk a focus.
* For **each HLJ preview item**, produce a JSON object with:

  * `"id"`
  * `"title"` (1-line, atomic)
  * `"domain"`
  * `"subdomain"` (list)
  * `"tags"` (max 3, canonical, lowercase)
  * `"difficulty"` ("low" | "medium" | "high")
  * `"priority"` ("low" | "medium" | "high")
  * `"line_source"` (e.g., "Ln 10‚Äì13")
  * (Optional: `"chunk"` and `"chunk_focus"` for easier grouping)

*Assign IDs using this pattern: `REQ-004-HLJ-Chunk_<chunk#>-Item_<item#>-v1.0`.*

---

## ‚úÖ  Required Output Format (**fences must stay verbatim**)

### === SUMMARY START ===

{
  "requirement_id": "REQ-004",
  "summary": "<your summary here>"
}

### === SUMMARY END ===

### === HLJ\_META START ===

{
  "domain": "<Domain>",                 // e.g., "FinTech"
  "subdomain": ["<Subdomain1>", ...],   // e.g., ["CustomerOnboarding"]
  "canonical_tags": ["tag1", "tag2"],   // up to 3 tags
  "difficulty": "<low|medium|high>",
  "priority": "<low|medium|high>"
}

### === HLJ\_META END ===

### === HLJ\_PLAN START ===

{
  "estimated_hlj_count": <integer>,
  "chunk_count": <integer>,
  "chunks": [
    {
      "chunk_id": "REQ-004-HLJ-Chunk_<chunk#>",
      "focus": "<focus string or 'unknown'>",
      "items": [
        {
          "id": "REQ-004-HLJ-Chunk_<chunk#>-Item_<item#>-v1.0",
          "title": "<atomic 1-line title>",
          "domain": "<Domain>",
          "subdomain": ["<Subdomain1>", ...],
          "tags": ["tag1", "tag2"],
          "difficulty": "<low|medium|high>",
          "priority": "<low|medium|high>",
          "line_source": "Ln XX‚ÄìYY"
        }
        // ... more items for this chunk
      ]
    }
    // ... more chunks as needed
  ]
}

### === HLJ\_PLAN END ===

*If any rule is violated or information is missing ‚áí append `!!CONSTRAINT_BROKEN!!` on a new line.*

---

## üî∏  Input Placeholder

```
# Requirement req-004 (FinTech)

FT-004: Enhanced Audit Logs for GDPR v2 Compliance
Title:
Enhancement of Audit Log Infrastructure for Full GDPR v2 Right-to-Erasure Support

Background & Business Objective:
With the implementation of the latest GDPR v2 regulations and increasing global pressure on privacy and data protection, it is critical that our audit logging infrastructure supports comprehensive, fine-grained, and compliant right-to-erasure capabilities. The current logging system, while robust for operational monitoring and internal forensics, lacks the architectural mechanisms necessary for both the complete and partial deletion of user-related log entries in response to right-to-erasure (RtE) requests. Failure to meet these requirements poses both regulatory and reputational risks.

This initiative aims to upgrade the audit log infrastructure to be fully compliant with GDPR v2‚Äîspecifically, to enable secure, traceable, and policy-driven log deletion workflows without compromising system integrity or the needs of legitimate compliance auditing.

Scope of Requirement:

Audit Log Structuring & Metadata:

All audit logs must be refactored to include user-specific metadata fields, enabling direct mapping of log events to user records, even if indirect identifiers (e.g., pseudonyms, hashed IDs) are used.

Log entries must be classified as either ‚Äúpersonal data‚Äù or ‚Äúoperational data,‚Äù in accordance with the GDPR v2 guidelines.

Implement a data lineage mechanism to trace all downstream dependencies for each log entry.

Right-to-Erasure Workflow:

On receipt of an RtE request, the system must trigger an automated process to identify and flag all audit logs containing personal data related to the user.

Provide dual-mode deletion:
a) Full Deletion: Completely remove eligible personal data from logs, rendering it unrecoverable.
b) Partial Deletion (Redaction): Mask or redact user-identifiable fields in entries where full deletion would impact operational or compliance auditability.

Log all RtE actions (meta-logs) with reason codes, requestor identity, affected records, and date/time for downstream audit.

Edge Case Handling:

For composite log entries involving multiple users, enable selective field-level redaction while preserving unrelated user data.

Where deletion is restricted by legal retention requirements, document the rationale and restrict access to such records via role-based controls.

Security & Integrity:

All deletion/redaction operations must be tamper-evident, with cryptographic checksums before/after action and hash chaining of meta-logs.

Provide APIs for internal compliance teams to review, approve, or deny individual deletion/redaction operations before execution.

Operational Monitoring & Reporting:

Implement dashboard views and scheduled reports to track RtE requests, processing times, exceptions, and compliance metrics.

All actions must be logged in real time and stored in a secure, access-controlled meta-log system.

Testing & Validation:

Mandatory integration and regression tests to ensure no ‚Äúghost‚Äù data persists post-deletion.

Simulate edge cases (e.g., conflicting deletion vs. retention requirements) and provide fail-loud alerts for manual intervention.

Dependencies & Constraints:

This initiative must not compromise the performance of the audit log system during peak transaction periods.

Any vendor solutions (e.g., managed log services) must demonstrate compliance with GDPR v2 and provide supporting certifications.

Must be implemented in coordination with the Legal, Security, and Compliance teams; sign-off required prior to deployment.

Deliverables:

Updated log schemas and API documentation

Implementation plan and migration guide

Training materials for compliance officers

Change logs and compliance validation report


```

**Respond only with text enclosed by the fences above. Do not include any extra commentary or explanation. If information is missing or ambiguous, use `"unknown"` for the value.**
